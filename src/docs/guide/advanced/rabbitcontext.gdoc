The bean responsible for connecting to the RabbitMQ server and keeping track of the connection and channel objects is the @RabbitContext@. While you may never need to use this bean, it can be useful.

The @RabbitContext@ bean can be injected as follows:
{code}
class TestService {
    def rabbitContext
}
{code}

The bean can also be retrieved from the @ApplicationContext@, as follows:
{code}
import grails.util.Holders

class TestObject {
    def testMethod() {
        RabbitContext context = Holders.applicationContext.getBean('rabbitContext')
    }
}
{code}

Of particular importance is the @getConnection()@ method of the @RabbitContext@ bean.  This method returns a @ConnectionContext@ object, which
exposes the RabbitMQ @Connection@ object through its own @getConnection()@ method.
